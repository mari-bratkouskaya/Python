# Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике и выводит его площадь.

a, b = float(input()), float(input())
print(a * b / 2)

# Две старушки идут навстречу друг другу с постоянными скоростями V1V1​ и V2V2​ км/ч. Определите, через какое время старушки встретятся, если расстояние между ними равно SS км.

s = float(input())
v1 = float(input())
v2 = float(input())
print(s / (v1 + v2))

#Напишите программу, которая считывает с клавиатуры одно число и выводит обратное ему. Если при этом введённое с клавиатуры число – ноль, то вывести «Обратного числа не существует» (без кавычек).

a = float(input())
if a == 0:
    print('Обратного числа не существует')
else:
    print(1 / a)

# У известного американского писателя Рэя Бредбери есть роман «451 градус по Фаренгейту». Напишите программу, которая определяет, какой температуре по шкале Цельсия соответствует указанное значение по шкале Фаренгейта.

f = float(input())
print(5 / 9 * (f - 32))

# На вход программе подается число nn – количество собачьих лет. Напишите программу, которая вычисляет возраст собаки в человеческих годах.
# Примечание. В течение первых двух лет собачий год равен 10.5 человеческим годам. После этого каждый год собаки равен 4 человеческим годам.

n = float(input())
if n <= 2:
    print(n * 10.5)
else:
    print(2 * 10.5 + (n - 2) * 4)

# Дано положительное действительное число. Выведите его первую цифру после десятичной точки.

a = float(input())
a1 = int(a)
a2 = a - a1
print(int(a2*10))

# Дано положительное действительное число. Выведите его дробную часть.

a = float(input())
a1 = int(a)
print(a - a1)

# Напишите программу, которая находит наименьшее и наибольшее из пяти чисел.

a = int(input())
b = int(input())
c = int(input())
d = int(input())
f = int(input())
print('Наименьшее число =', min(a, b, c, d, f))
print('Наибольшее число =', max(a, b, c, d, f))

# Напишите программу, которая упорядочивает три числа от большего к меньшему.

a = int(input())
b = int(input())
c = int(input())
print(max(a, b, c))
print(a + b + c - max(a, b, c) - min(a, b, c))
print(min(a, b, c))

#Назовем число интересным, если в нем разность максимальной и минимальной цифры равняется средней по величине цифре. Напишите программу, которая определяет интересное число или нет. Если число интересное, следует вывести – «Число интересное» иначе «Число неинтересное».

n = int(input())
n100 = n // 100
n10 = (n - n100 * 100) // 10
n1 = n % 10
max = max(n100, n10, n1)
min = min(n100, n10, n1)
avr = n100 + n10 + n1 - max - min
if max - min == avr:
    print('Число интересное')
else:
    print('Число неинтересное')

# Даны пять чисел a1​,a2​,a3​,a4​,a5​. Напишите программу, которая вычисляет сумму их модулей 

a1 = float(input())
a2 = float(input())
a3 = float(input())
a4 = float(input())
a5 = float(input())
print(abs(a1) + abs(a2) + abs(a3) + abs(a4) + abs(a5))

# Прогуливаясь по Манхэттену, вы не можете попасть из точки А в точку Б по кратчайшему пути. Если только вы не умеете проходить сквозь стены, вам обязательно придется идти вдоль его параллельно-перпендикулярных улиц.
# На плоскости манхэттенское расстояние между двумя точками (p1; p2)(p1​;p2​) и определяется так ∣p1−q1∣+∣p2−q2∣.

p1 = int(input())
p2 = int(input())
q1 = int(input())
q2 = int(input())
print(abs(p1 - q1) + abs(p2 - q2))

# Напишите программу, которая выводит текст:
# "Python is a great language!", said Fred. "I don't ever remember having this much fun before."
# Примечание. Используйте конкатенацию строк.

a = '"Python is a great language!", said Fred. '
b = '"I don\'t ever remember having this much fun before."'
print(a+b)

# Напишите программу, которая считывает с клавиатуры две строки – имя и фамилию пользователя и выводит фразу:
# «Hello [введенное имя] [введенная фамилия]! You just delved into Python».

a = 'Hello '
n = input()
b = ' '
sn = input()
c = '! You just delved into Python'
print(a + n + b + sn + c)

# Напишите программу, которая считывает с клавиатуры название футбольной команды и выводит фразу:
# «Футбольная команда [введённая строка] имеет длину [длина введённой строки] символов».

a = 'Футбольная команда '
n = input()
b = ' имеет длину '
ln = str(len(n))
c = ' символов'
print(a + n + b + ln + c)

# Даны названия трех городов. Напишите программу, которая определяет самое короткое и самое длинное название города.

a, b, c = input(), input(), input()
la = len(a)
lb = len(b)
lc = len(c)
min = min(la, lb, lc)
max = max(la, lb, lc)
if la == min:
    print(a)
elif lb == min:
    print(b)
elif lc == min:
    print(c)
if la == max:
    print(a)
elif lb == max:
    print(b)
elif lc == max:
    print(c)

# Вводятся 3 строки в случайном порядке. Напишите программу, которая выясняет можно ли из длин этих строк построить возрастающую арифметическую прогрессию.

a, b, c = input(), input(), input()
la = len(a)
lb = len(b)
lc = len(c)
min = min(la, lb, lc)
max = max(la, lb, lc)
avg = la + lb + lc - min - max
if (min + max) / 2 == avg:
    print('YES')
else:
    print('NO')

# Напишите программу, которая считывает одну строку, после чего выводит «YES», если в введенной строке есть подстрока «синий» и «NO» в противном случае.

a = input()
if 'синий' in a:
    print('YES')
else:
    print('NO')

# Напишите программу, которая считывает одну строку, после чего выводит «YES», если в введённой строке есть подстрока «суббота» или «воскресенье», и «NO» в противном случае.

a = input()
if 'суббота' in a or 'воскресенье' in a:
    print('YES')
else:
    print('NO')

#Будем считать email адрес корректным, если в нем есть символ собачки (@) и точки. Напишите программу проверяющую корректность email адреса.

email = input()
if '@' in email and '.' in email:
    print('YES')
else:
    print('NO')

# Модуль math
# На плоскости евклидово расстояние между двумя точками (x1; y1) и (x2; y2)

from math import *
x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())
a = pow(x1-x2, 2)
b = pow(y1-y2, 2)
c = sqrt(a+b)
print(c)

# Напишите программу определяющую площадь круга и длину окружности по заданному радиусу RR.

from math import *
r = float(input())
s = pi * r ** 2
c = 2 * pi * r
print(s)
print(c)

# Формат входных данных
# На вход программе подается два вещественных числа aa и bb​, каждое на отдельной строке.
# Формат выходных данных
# Программа должна вывести 4 числа – среднее арифметическое, геометрическое, гармоническое и квадратичное.

from math import *
a = float(input())
b = float(input())
print((a + b) / 2)
print(sqrt(a * b))
print(2 * a * b / (a + b))
print(sqrt((a ** 2 + b ** 2) / 2))

# Напишите программу, вычисляющую значение тригонометрического выражения
# sin⁡x+cos⁡x+tan⁡2x
# по заданному числу градусов xx.

from math import *
x = float(input())
r = x * pi / 180
print(sin(r) + cos(r) + tan(r) * tan(r))

# Напишите программу, вычисляющую значение ⌈x⌉ +⌊x⌋ по заданному вещественному числу x.

from math import *
x = float(input())
print(floor(x) + ceil(x))

# Даны три вещественных числа aa, bb, cc. Напишите программу, которая находит вещественные корни квадратного уравнения 
# ax2+bx+c=0

from math import *
a = float(input())
b = float(input())
c = float(input())
d = b**2 - 4 * a * c
if d > 0:
    x1 = (-b-d**0.5)/(2*a)
    x2 = (-b+d**0.5)/(2*a)
    print(min(x1, x2))
    print(max(x1, x2))
elif d == 0:
    print((-b)/(2*a))
else:
    print('Нет корней')

# Даны два числа: натуральное число n и вещественное число a. Напишите программу, которая находит площадь указанного правильного многоугольника.

from math import *
n = float(input())
a = float(input())
print((n * a**2) / (4 * tan(pi / n)))

# Дополните приведенный код, используя индексатор, так чтобы он вывел символ запятой.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print(s[])

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[7])

# Дополните приведенный код, используя индексатор, так чтобы он вывел символ w.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print(s[])

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[-10])

# На вход программе подается одна строка. Напишите программу, которая выводит элементы строки с индексами 0, 2, 4, ... в столбик.

s = input()
for i in range(0, len(s), 2):
    print(s[i])

# На вход программе подается одна строка. Напишите программу, которая выводит в столбик элементы строки в обратном порядке.

s = input()
for i in range(1, len(s)+1):
    print(s[-i])

# На вход программе подаются три строки: имя, фамилия и отчество. Напишите программу, которая выводит инициалы человека.

name = input()
lastname = input()
middlename = input()
print(lastname[0], name[0], middlename[0], sep = '')

# На вход программе подается одна строка состоящая из цифр. Напишите программу, которая считает сумму цифр данной строки.

s = input()
count = 0
for i in range(len(s)):
    count += int(s[i])
print(count)

# На вход программе подается одна строка. Напишите программу, которая выводит сообщение «Цифра» (без кавычек), если строка содержит цифру. В противном случае вывести сообщение «Цифр нет» (без кавычек).

s = input()
count = 0
for i in range(len(s)):
    if s[i] in '0123456789':
        count += 1
        break
if count == 0:
    print('Цифр нет')
else:
    print('Цифра')

# На вход программе подается одна строка. Напишите программу, которая определяет сколько раз в строке встречаются символы + и *.

s = input()
plus = 0
multiply = 0
for i in range(len(s)):
    if s[i] in '+':
        plus += 1
    if s[i] in '*':
        multiply += 1
print('Символ + встречается', plus, 'раз')
print('Символ * встречается', multiply, 'раз')

# На вход программе подается одна строка. Напишите программу, которая определяет сколько в ней одинаковых соседних символов.

s = input()
count = 0
for i in range(len(s)-1):
    if s[i] == s[i+1]:
        count += 1
print(count)

# На вход программе подается одна строка с буквами русского языка. Напишите программу, которая определяет количество гласных и согласных букв.

s = input()
count1 = 0
count2 = 0
for i in range(len(s)):
    if s[i] in 'ауоыиэяюёеАУОЫИЭЯЮЁЕ':
        count1 += 1
    if s[i] in 'бвгджзйклмнпрстфхцчшщБВГДЖЗЙКЛМНПРСТФХЦЧШЩ':
        count2 += 1
print('Количество гласных букв равно', count1)
print('Количество согласных букв равно', count2)

# На вход программе подается натуральное число, записанное в десятичной системе счисления. Напишите программу, которая переводит данное число в двоичную систему счисления.

n = int(input())
b = str()
while n > 0:
    b = str(n % 2) + b
    n = n//2
print(b)

# Срезы строк
# Дополните приведенный код, используя срезы, так чтобы он вывел первые 12 символов строки s.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print()

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[:12])

# Дополните приведенный код, используя срезы, так чтобы он вывел последние 9 символов строки s.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print()

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[-9:])

# Дополните приведенный код, используя срезы, так чтобы он вывел каждый 7 символ строки s начиная от начала строки.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print()

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[::7])

# Дополните приведенный код, используя срезы, так чтобы он вывел строку s в обратном порядке.
# s = "In 2010, someone paid 10k Bitcoin for two pizzas."
# print()

s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[::-1])

# На вход программе подается одно слово, записанное в нижнем регистре. Напишите программу, которая определяет является ли оно палиндромом.
# Примечание. Палиндром читается одинаково в обоих направлениях, например слово «потоп».

s = input()
if s  == s[::-1]:
    print('YES')
else:
    print('NO')

# На вход программе подается одна строка. Напишите программу, которая выводит:
# общее количество символов в строке;
# исходную строку повторенную 3 раза;
# первый символ строки;
# первые три символа строки;
# последние три символа строки;
# строку в обратном порядке;
# строку с удаленным первым и последним символом.

s = input()

print(len(s))
print(s*3)
print(s[0])
print(s[0:3])
print(s[-3:])
print(s[::-1])
print(s[1:-1])

# На вход программе подается одна строка. Напишите программу, которая выводит:
# третий символ этой строки;
# предпоследний символ этой строки;
# первые пять символов этой строки;
# всю строку, кроме последних двух символов;
# все символы с четными индексами;
# все символы с нечетными индексами;
# все символы в обратном порядке;
# все символы строки через один в обратном порядке, начиная с последнего.

s = input()

print(s[2])
print(s[-2])
print(s[0:5])
print(s[0:-2])
print(s[::2])
print(s[1::2])
print(s[::-1])
print(s[::-2])

# На вход программе подается строка текста. Напишите программу, которая разрежет ее на две равные части, переставит их местами и выведет на экран.

s = input()
print(s[len(s) // 2 + len(s)%2:], s[:len(s)//2+ len(s)%2], sep='' )

# Методы строк.

s = 'i Learn Python language'
print(s.capitalize())

s = 'i LEARN Python LAnguaGE'
print(s.lower())

s = '$12344%^$#@!'
print(s.lower())

s1 = 'a'
s2 = s1.upper()
print(s1, s2)

s = 'i LEARN Python LAnguaGE'
print(s.upper())

s = 'i LEARN Python LAnguaGE'
print(s.swapcase())

# На вход программе подается строка состоящая из имени и фамилии человека, разделенных одним пробелом. Напишите программу, которая проверяет, что имя и фамилия начинаются с заглавной буквы.

s = input()
if s == s.title():
    print('YES')
else:
    print('NO')

# На вход программе подается строка. Напишите программу, которая меняет регистр символов, другими словами замените все строчные символы заглавными и наоборот.

s = input()
print(s.swapcase())

# На вход программе подается строка текста. Напишите программу, которая определяет является ли оттенок текста хорошим или нет. Текст имеет хороший оттенок, если содержит подстроку «хорош» во всевозможных регистрах.

s = input().lower()
a = 'хорош'
if a in s:
    print('YES')
else:
    print('NO')

# На вход программе подается строка. Напишите программу, которая подсчитывает количество буквенных символов в нижнем регистре.

s = input()
count = 0
for i in range(len(s)):
    if 'a' <= s[i] <= 'z':
        count += 1
print(count)

# На вход программе подается строка текста, состоящая из слов, разделенных ровно одним пробелом. Напишите программу, которая подсчитывает количество слов в ней.

s = input()
print(s.count(' ')+1)

# На вход программе подается строка генетического кода, состоящая из букв А (аденин), Г (гуанин), Ц (цитозин), Т (тимин). Напишите программу, которая подсчитывает сколько аденина, гуанина, цитозина и тимина входит в данную строку генетического кода.

s = input()
print('Аденин:', s.lower().count('а'))
print('Гуанин:', s.lower().count('г'))
print('Цитозин:', s.lower().count('ц'))
print('Тимин:', s.lower().count('т'))

# Джим Хоппер с помощью радиоприемника пытается получить сообщение Оди. На приемник ему поступает nn различных последовательностей кода Морзе. Декодировав их, он получает последовательности из цифр и строчного латинского алфавита, при этом во всех сообщениях Оди содержится число 11, причем минимум 3 раза. Помогите определить Джиму количество сообщений от Оди.

n = int(input())
counter = 0
for i in range(n):
    i = input()
    if i.count('11') >= 3:
        counter += 1
print(counter)

# На вход программе подается строка текста. Напишите программу, которая подсчитывает количество цифр в данной строке.

s = input()
counter = 0
for i in range(len(s)):
    if '0' <= s[i] <= '9':
        counter += 1
print(counter)

# На вход программе подается строка текста. Напишите программу, которая проверяет, что строка заканчивается подстрокой .com или .ru.

s = input()
if s.endswith('.com') or s.endswith('.ru'):
    print('YES')
else:
    print('NO')

# На вход программе подается строка текста. Напишите программу, которая выводит на экран символ, который появляется наиболее часто.

s = input()
max = 0
a = str()
for i in range(len(s)):
    if s.count(s[i]) >= max:
        max = s.count(s[i])
        a = s[i]
print(a)

# На вход программе подается строка текста. Если в этой строке буква «f» встречается только один раз, выведите её индекс. Если она встречается два и более раз, выведите индекс её первого и последнего вхождения на одной строке, разделенных символом пробела. Если буква «f» в данной строке не встречается, следует вывести «NO».

s = input()
if s.count('f') > 1:
    print(s.find('f'), s.rfind('f'))
elif s.count('f') == 1:
    print(s.find('f'))
else:
    print('NO')

# На вход программе подается строка текста, в которой буква «h» встречается минимум два раза. Напишите программу, которая удаляет из этой строки первое и последнее вхождение буквы «h», а также все символы, находящиеся между ними.

s = input()
print(s[:s.find('h')], s[s.rfind('h')+1:], sep='')

# Дополните приведенный код, используя форматирование строк с помощью метода format, так чтобы он вывел текст: 
# «In 2010, someone paid 10k Bitcoin for two pizzas.» (без кавычек).

s = 'In {0}, someone paid {1} {2} for two pizzas.'
print(s.format('2010', '10k', 'Bitcoin'))

# Дополните приведенный код, используя форматирование строк с помощью f-строк, так чтобы он вывел текст: 
# «In 2010, someone paid 10K Bitcoin for two pizzas.» (без кавычек).

year = 2010
amount = '10K'
currency = 'Bitcoin'

print(f'In {year}, someone paid {amount} {currency} for two pizzas.')

# На вход программе подаются два числа aa и bb. Напишите программу, которая для каждого кодового значения в диапазоне от aa до bb (включительно), выводит соответствующий ему символ из таблицы символов Unicode.

a = int(input())
b = int(input())
for i in range(a, b+1):
    print(chr(i), end=' ')

# На вход программе подается строка текста. Напишите программу, которая переводит каждый ее символ в соответствующий ему код из таблицы символов Unicode.

n = input()
for i in range(len(n)):
    print(ord(n[i]), end = ' ')

# Легион Цезаря, созданный в 23 веке на основе Римской Империи не изменяет древним традициям и использует шифр Цезаря. Это их и подвело, ведь данный шифр очень простой. Однако в постапокалипсисе люди плохо знают все тонкости довоенного мира, поэтому ученые из НКР не могут понять как именно нужно декодировать данные сообщения. Напишите программу для декодирования этого шифра.

s = int(input())
n = input()
for i in range(len(n)):
    m = ord(n[i]) - s
    if m < 97:
        m = 122 - (96 - m)
    print(chr(m), end='')

#  Экзамен
# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы была выведена длина строки s.

s = 'Python rocks!'
print(len(s))

# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы был выведен четвертый символ строки s.

s = 'Python rocks!'
print(s[3:4])

# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы были выведены символы строки s со 2 по 5 включительно.

s = 'Python rocks!'
print(s[1:5])

# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы была выведена строка s без ведущих и замыкающих пробельных символов.

s = '    Python rocks!     '
print(s.strip())

# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы была выведена строка s заглавными буквами (в верхнем регистре).

s = 'Python rocks!'
print(s.upper())

# Вставьте пропущенный фрагмент кода, так чтобы в результате выполнения программы была выведена строка s в которой символ «o» заменен на символ «@».

s = 'Python rocks!'
print(s.replace('o', '@'))

# На вход программе подается строка текста. Напишите программу, которая удаляет из нее все символы с индексами кратными 3, то есть символы с индексами 0, 3, 6, ....

s = input()
for i in range(len(s)):
    if i % 3 != 0:
        print(s[i], end = '')

# На вход программе подается строка текста. Напишите программу, которая заменяет все вхождения цифры 1 на слово «one».

s = input()
print(s.replace('1', 'one'))

# На вход программе подается строка текста. Напишите программу, которая удаляет все вхождения символа «@».

s = input()
print(s.replace('@', ''))

# На вход программе подается строка текста. Напишите программу, которая выводит индекс второго вхождения буквы «f». Если буква «f» встречается только один раз, выведите число -1, а если не встречается ни разу, выведите число -2.

s = input()
if s.count('f') == 0:
    print('-2')
elif s.count('f') == -1:
    print('-1')
else:
    n = s.replace('f', 's', 1)
    print(n.find('f'))

# На вход программе подается строка текста в которой буква «h» встречается как минимум два раза. Напишите программу, которая возвращает исходную строку и переворачивает последовательность символов, заключенную между первым и последним вхождением буквы «h».

s = input()
print(s[: s.find('h')] + s[s.rfind('h'): s.find('h'): -1] + s[s.rfind('h'):])
